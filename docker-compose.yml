version: "2"

services:

  spark-master:
    image: bitnami/spark:3.4.2
    container_name: spark-master
    ports:
      - "8888:8888"
      - "7077:7077"
    volumes:
      - "spark_master_data:/bitnami"
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_WEBUI_PORT=8888

  spark-worker-1:
    image: bitnami/spark:3.4.2
    container_name: spark-worker-1
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_CORES=1
      - SPARK_WORKER_MEMORY=1024m
    volumes:
      - "spark_worker1_data:/bitnami"
    depends_on:
      - spark-master

  spark-worker-2:
    image: bitnami/spark:3.4.2
    container_name: spark-worker-2
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_CORES=1
      - SPARK_WORKER_MEMORY=1024m
    volumes:
      - "spark_worker2_data:/bitnami"
    depends_on:
      - spark-master

  zookeeper:
    container_name: zookeeper
    image: docker.io/bitnami/zookeeper:3.7
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    container_name: kafka
    image: docker.io/bitnami/kafka:2
    ports:
      - "9092:9092"
      - "9093:9093"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "18080:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    depends_on:
      - kafka
      - zookeeper

  schema-registry:
    image: confluentinc/cp-schema-registry:3.3.1
    container_name: schema-registry
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
    depends_on:
      - zookeeper
      - kafka

  postgresql:
      image: docker.io/bitnami/postgresql
      container_name: postgresql
      ports:
        - "15432:5432"
      volumes:
        - "postgresql_data:/bitnami/postgresql"
      environment:
        - POSTGRESQL_POSTGRES_PASSWORD=admin
        - POSTGRESQL_USERNAME=${POSTGRES_USER}
        - POSTGRESQL_PASSWORD=${POSTGRES_PASSWORD}
        - POSTGRESQL_DATABASE=${POSTGRES_DB}
    
volumes:

  spark_master_data:
    driver: local

  spark_worker1_data:
    driver: local

  spark_worker2_data:
    driver: local

  zookeeper_data:
    driver: local

  kafka_data:
    driver: local

  postgresql_data:
    driver: local